#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОбработкаПроведенияОУ(Отказ);
	ОбработкаПроведенияБУ(Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = Товары.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработка проведения оперативного учета
//
// Параметры:
// Отказ - Булево
//
Процедура ОбработкаПроведенияОУ(Отказ)
	
	Движения.ОстаткиНоменклатуры.Очистить();
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Движения.ОстаткиНоменклатуры.Записать();
	
	Движения.ПартииНоменклатуры.Очистить();
	Движения.ПартииНоменклатуры.Записывать = Истина;
	Движения.ПартииНоменклатуры.Записать();
	
	Для Каждого СтрокаТовара Из Товары Цикл
	
		Движение = Движения.ОстаткиНоменклатуры.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.Номенклатура = СтрокаТовара.Номенклатура;
		Движение.Количество = СтрокаТовара.Количество;
		
		Движение = Движения.ПартииНоменклатуры.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Партия = Ссылка;
		Движение.Номенклатура = СтрокаТовара.Номенклатура;
		Движение.Количество = СтрокаТовара.Количество;
		Движение.Сумма = СтрокаТовара.Сумма;
			
	КонецЦикла;
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Движения.ПартииНоменклатуры.Записывать = Истина;
	
КонецПроцедуры

// Обрабокта проведения бухгалтерского учета 
//
// Параметры:
// Отказ - Булево
//
Процедура ОбработкаПроведенияБУ(Отказ)

	Движения.Управленческий.Очистить();
	Движения.Управленческий.Записывать = Истина;
	Движения.Управленческий.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяТовары.Номенклатура,
		|	СУММА(ПриходнаяНакладнаяТовары.Количество) КАК Количество,
		|	СУММА(ПриходнаяНакладнаяТовары.Сумма) КАК Сумма,
		|	ПриходнаяНакладнаяТовары.СрокГодности
		|ИЗ
		|	Документ.ПриходнаяНакладная.Товары КАК ПриходнаяНакладнаяТовары
		|ГДЕ
		|	ПриходнаяНакладнаяТовары.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ПриходнаяНакладнаяТовары.Номенклатура,
		|	ПриходнаяНакладнаяТовары.СрокГодности";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.Управленческий.Добавить();
		Движение.Период = Дата;
		Движение.СчетДт = ПланыСчетов.Управленческий.Товары;
		Движение.СчетКт = ПланыСчетов.Управленческий.Поставщики;
		//@skip-check bsl-legacy-check-static-feature-access-for-unknown-left-part
		Движение.КоличествоДт = Выборка.Количество;
		Движение.Сумма = Выборка.Сумма;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СрокГодностиТовара] = Выборка.СрокГодности;
		
	КонецЦикла;
	
	Движения.Управленческий.Записывать = Истина;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
